@using StreamingTvComparison.Models
@using StreamingTvComparison.Services
@inject IStreamingService StreamingService


<h3>Channel List</h3>

@if (providers == null || channels == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table"
        data-toggle="table"
        data-show-columns="true"
        data-pagination="true"
        data-search="true">
        <thead>
            <tr>
                <th>Channel</th>
                @foreach (var provider in providers)
                {
                    <th>@provider.Name</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var channel in channels)
            {
            <tr>
                <td>@channel.Name</td>
                @foreach (var provider in providers)
                {
                    <th>@provider.ProviderChannels.Select(s => s.ProviderId).Contains(provider.ProviderId)</th>
                }
            </tr>
            }
        </tbody>
    </table>
}

@code {
    List<Provider> providers;
    List<Channel> channels;

    protected override async Task OnInitializedAsync()
    {
        providers = await StreamingService.GetProviders();
        channels = await StreamingService.GetChannels();

    }
}
