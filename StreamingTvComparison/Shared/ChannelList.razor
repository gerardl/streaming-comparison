@using StreamingTvComparison.Models
@using StreamingTvComparison.Services
@inject IStreamingService streamingService
@inject IJSRuntime jsRuntime

<h3>Channel List</h3>

@if (providers == null || channels == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table id="tblChannels" class="table">
        <thead>
            <tr>
                <th>Channel</th>
                @foreach (var provider in providers)
                {
                    <th>@provider.Name</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var channel in channels)
            {
                <tr>
                    <td>@channel.Name</td>
                    @foreach (var provider in providers)
                    {
                        <th>@provider.ProviderChannels.Select(s => s.ProviderId).Contains(provider.ProviderId)</th>
                    }
                </tr>
            }
        </tbody>
    </table>
}

@code {
    List<Provider> providers;
    List<Channel> channels;

    protected override async Task OnInitializedAsync()
    {
        providers = await streamingService.GetProviders();
        channels = await streamingService.GetChannels();

    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender) await jsRuntime.InvokeAsync<object>("setupChannelTable");
    }
}
